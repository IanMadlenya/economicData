getwd()
10:1
for(i in 10:1){
print(i)
}
search()
normals <- rnorm(100,1,2)
normals
length(normals)
rnorm(4)
n <- 1:4
r <- lapply(n,rnorm)
r
x <- list(rnorm(100), runif(100), rpois(100, 1))
sapply(x, quantile, probs = c(0.25, 0.75))
source('~/.active-rstudio-document', echo=TRUE)
cube(3)
print(cube(3))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?iris
iris
iris$Sepal.Length
mean(iris$Sepal.Length)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
iris$Species
source('~/Dropbox/Computing for Data Analysis/Test file.R', echo=TRUE)
source('~/Dropbox/Computing for Data Analysis/Test file.R', echo=TRUE)
?mtcars
MTCARS
mtcars
mtcars
mtcars[1]
length(mtcars[1])
len(mtcars[1])
dim(mtcars[1])
dim(mtcars[1])[1]
n = dim(mtcars[1])[1]
mtcars$mpg
x <- c(1,2,3,4,5)
x <- c(1x,6)
x <- c(x,6)
x
x = c()
x
x = c(x,1)
x
# Question 5
library(datasets)
data(mtcars)
# Question 6
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sub6 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl == 6){
sub6 <-c(sub6,mtcars$mpg[x])
}
}
mean(sub6)
debug(ls)
warnings()
source('~/Dropbox/Computing for Data Analysis/Test file.R', echo=TRUE)
ls()
ls(1)
ls(1,2,3,4)
ls()
x = c(1,2,3,4,5)
ls(x)
ls
ls()
debug(ls)
ls()
ls()
debus(ls)
debug(ls)
ls()
ls()
# Question 9
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
# Question 9
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
f(4)
# Question 1
cube <- function(x, n) {
x^3
}
cube(3)
# Question 2
# pow <- function(x = 4, n = 3) {
#   x^n
# }
# print(pow())
# Question 3
x <- 1:10
if(x > 5) {
x <- 0
}
# Question 4
library(datasets)
data(iris)
mean(iris$Sepal.Length)
# Question 5
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
# Question 6
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sub6 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 6){
sub6 <-c(sub6,mtcars$mpg[x])
}
}
mean(sub6)
# Question 9
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
sub6 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 6){
sub6 <-c(sub6,mtcars$mpg[x])
}
}
m6 <- mean(sub6)
sub4 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 4){
sub6 <-c(sub4,mtcars$mpg[x])
}
}
m4 <- mean(sub4)
diff46 <- m4 - m6
m6
m4
mtcars
sub6 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 6){
sub6 <-c(sub6,mtcars$mpg[x])
}
}
m6 <- mean(sub6)
sub4 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 4){
sub4 <-c(sub4,mtcars$mpg[x])
}
}
m4 <- mean(sub4)
diff46 <- m4 - m6
diff46
library(datasets)
data(iris)
iris
split(iris$Sepal.Length,iris$Species)
sapply(split(iris$Sepal.Length,iris$Species),mean)
library(datasets)
data(mtcars)
# Question 6
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sub6 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 6){
sub6 <-c(sub6,mtcars$mpg[x])
}
}
m6 <- mean(sub6)
sub4 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 4){
sub4 <-c(sub4,mtcars$mpg[x])
}
}
m4 <- mean(sub4)
diff46 <- m4 - m6
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
library(datasets)
data(mtcars)
# Question 6
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sub8 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 8){
sub8 <-c(sub6,mtcars$mpg[x])
}
}
m8 <- mean(sub8)
sub4 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 4){
sub4 <-c(sub4,mtcars$mpg[x])
}
}
m4 <- mean(sub4)
diff48 <- m4 - m8
dif48
diff48
library(datasets)
data(iris)
mean(iris$Sepal.Length)
sapply(split(iris$Sepal.Length,iris$Species),mean)
library(datasets)
data(mtcars)
# Question 6
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris, 2, mean)
colMeans(iris)
library(datasets)
data(mtcars)
sub8 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 8){
sub8 <-c(sub6,mtcars$mpg[x])
}
}
m8 <- mean(sub8)
sub4 = c()
n <- dim(mtcars[1])[1]
for (x in 1:n) {
if (mtcars$cyl[x] == 4){
sub4 <-c(sub4,mtcars$mpg[x])
}
}
m4 <- mean(sub4)
diff48 <- m4 - m8
diff48
z = sapply(split(mtcars$hp,mtcars$cyl),mean)
z
z[3] - z[1]
pwd
cd
demo()
getwd()
getwd(/Users/brianjenkins)
setwd(/Users/brianjenkins)
setwd("/Users/brianjenkins")
setwd("/Users/brianjenkins/desktop/Quantity Theory")
getwd()
mydata = read.csv("qtyTheoryData.csv")  # read csv file
mydata
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
#plot(wt, mpg, main="Scatterplot Example",
#     xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
data
data[real.gdp]
data['real.gdp']
data[1]
m = data[1]
#plot(wt, mpg, main="Scatterplot Example", xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
p = data[5]
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
m = data[4]
p = data[5]
y = data[6]
#plot(wt, mpg, main="Scatterplot Example", xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
iso=data[2]
m = data[4]
p = data[5]
y = data[6]
plot(m, p, main="Scatterplot Example", xlab="money growth", ylab="inflation", pch=19)
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
iso=data[2]
m = data[4]
p = data[5]
y = data[6]
plot(m, p, xlab="money growth", ylab="inflation")
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
iso=data[2]
m = data[4]
p = data[5]
y = data[6]
plot(data)
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
iso=data[2]
m = data[4]
p = data[5]
y = data[6]
plot(data[4:5])
#qtyTheory.R
data = read.csv("qtyTheoryData.csv")  # read csv file
iso=data[2]
m = data[4]
p = data[5]
y = data[6]
plot(data[4:5])
